"use strict";var _interopRequire=function(t){return t&&t.__esModule?t["default"]:t},_objectWithoutProperties=function(t,e){var n={};for(var r in t)e.indexOf(r)>=0||Object.prototype.hasOwnProperty.call(t,r)&&(n[r]=t[r]);return n},_inherits=function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(t.__proto__=e)},_classCallCheck=function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")},mixin=_interopRequire(require("smart-mixin")),cache={},BaseClass;module.exports=function(registry){var _ref=void 0===arguments[1]?{}:arguments[1],_ref$ruleset=_ref.ruleset,ruleset=void 0===_ref$ruleset?{}:_ref$ruleset,_ref$naming=_ref.naming,naming=void 0===_ref$naming?!1:_ref$naming;return ruleset=Object.keys(ruleset).reduce(function(t,e){return t[e]=Object.keys(ruleset[e]).reduce(function(t,n){return t[n]=mixin[ruleset[e][n]],t},{}),t},{}),Object.assign(ruleset,{ReactComponent:{componentWillMount:mixin.MANY,componentDidMount:mixin.MANY,componentWillReceiveProps:mixin.MANY,shouldComponentUpdate:mixin.ONCE,componentWillUpdate:mixin.MANY,componentDidUpdate:mixin.MANY,componentWillUnmount:mixin.MANY,getInitialState:mixin.MANY_MERGED,getDefaultProps:mixin.MANY_MERGED}}),{on:function(t){BaseClass=t},using:function using(descriptor){var traits=descriptor[0].split(" "),traitsClassName=""+BaseClass.name+"_with_"+traits.join("_and_");if(cache[traitsClassName])return cache[traitsClassName];var _ret=function(){var TraitsClass=function(t){function e(){for(var n=this,r=arguments.length,s=Array(r),i=0;r>i;i++)s[i]=arguments[i];_classCallCheck(this,e),t.call.apply(t,[this].concat(s)),traits.map(function(e){var r=registry[e],s=r.constructor,i=_objectWithoutProperties(r,["constructor"]);"constructor"===s.name&&s.call(n),mixin(ruleset[t.name]||{})(n.constructor.prototype,i)})}return _inherits(e,t),e}(BaseClass);return naming&&eval("TraitsClass = (function (BaseClass) {\n                          "+TraitsClass.toString().split("TraitsClass").join(traitsClassName)+"\n                          _inherits("+traitsClassName+", BaseClass);\n\n                          return "+traitsClassName+";\n                        })(BaseClass);"),{v:cache[traitsClassName]=TraitsClass}}();return"object"==typeof _ret?_ret.v:void 0}}};